#user  nobody;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#error_log  "pipe:rollback logs/error_log interval=1d baknum=7 maxsize=2G";

#pid        logs/nginx.pid;
worker_rlimit_nofile 65535;

events {
    use epoll;
    worker_connections  102400;
}


http {
    include       /usr/local/nginx/conf.d/*.conf;
    include       mime.types;
    default_type  application/octet-stream;
    log_format  main  '{"client_ip":"$remote_addr", "remote_user":"$remote_user", "time_local":"$time_iso8601", "host":"$http_host", "request":"$request", "requesttime":"$request_time", "upstream_response_time":"$upstream_response_time", "upstream_addr":"$upstream_addr", "status":"$status", "http_user_agent":"$http_user_agent","http_x_register_referrer":"$http_x_register_referrer", "http_x_forwarded_for":"$http_x_forwarded_for", "body_bytes_sent":"$body_bytes_sent", "http_referer":"$http_referer", "server_addr":"$server_addr", "server_port":"$server_port", "bytes_sent":"$bytes_sent", "connection_time":"$connection_time", "connection":"$connection", "request_time":"$request_time","req_id":"$request_id"}';
    log_format json '{'
        '"time":"$time_iso8601",'
        '"client_ip":"$remote_addr",'
        '"client_port":"$remote_port",'
        '"http_x_forwarded_for":"$http_x_forwarded_for",'
        '"http_x_real_ip":"$http_x_real_ip",'
        '"http_x_request_id":"$http_x_request_id",'
        '"http_x_trace_id":"$http_x_trace_id",'
        '"scheme":"$scheme",'
        '"request_method":"$request_method",'
        '"host":"$host",'
        '"request_uri":"$request_uri",'
        '"request_time":"$request_time",'
        '"tcpinfo_rtt":"$tcpinfo_rtt",'
        '"status":"$status",'
        '"server_protocol":"$server_protocol",'
        '"body_bytes_sent":"$body_bytes_sent",'
        '"upstream_addr":"$upstream_addr",'
        '"upstream_response_time":"$upstream_response_time",'
        '"upstream_status":"$upstream_status",'
        '"http_user_agent":"$http_user_agent",'
        '"http_referer":"$http_referer"'
      '}';   
    access_log  logs/access.log  json;
    error_log   logs/error.log warn;
    #tengine 才有
    #access_log  "pipe:rollback logs/access_log interval=1d baknum=7 maxsize=2G"  main;

    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay on;

    #server_tokens在打开的情况下会使404页面显示Nginx的当前版本号
    server_tokens off;

    keepalive_timeout  65;
    # 开启基础监控
    vhost_traffic_status_zone  shared:vhost_traffic_status:32m;
    # 开启状态码过滤
    vhost_traffic_status_filter on;
    # 开启此功能，在Nginx配置有多个server_name的情况下，会根据不同的server_name进行流量的统计，否则默认会把流量全部计算到第一个server_name上
    vhost_traffic_status_filter_by_host on;
    limit_req_zone $binary_remote_addr zone=allips:100m rate=10r/s;
    #上传大小限制
    client_max_body_size 100m;
    #开启压缩
    gzip on;
    gzip_min_length 1k;
    gzip_buffers 4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 2;
    #图片 视频不要压缩,不仅不会缩小还会消耗cpu 内存
    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/javascript application/json;
    #请求头开启携带压缩标识
    gzip_vary on;
    gzip_disable "MSIE [1-6]\.";

    server {
          listen 1080;
          server_name _;   # 内网可以通过http://IP:1080/status 进行访问，1080端口仅对内网开放

          location /status {
                  limit_rate_after 102400K;
                  limit_rate 2048k;
                  vhost_traffic_status_display;
                  vhost_traffic_status_display_format html;
          }
          location / {
                      return 403;
          }
    }


#    server {
#        listen       80;
#        server_name  localhost;
#
#        #charset koi8-r;
#
#        #access_log  logs/host.access.log  main;
#        #access_log  "pipe:rollback logs/host.access_log interval=1d baknum=7 maxsize=2G"  main;
#
#        location / {
#            root   html;
#            index  index.html index.htm;
#        }
#
#        #error_page  404              /404.html;
#
#        # redirect server error pages to the static page /50x.html
#        #
#        error_page   500 502 503 504  /50x.html;
#        location = /50x.html {
#            root   html;
#        }
#        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$  {
#            expires 30d;
#        }
#
#        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#        #
#        #location ~ \.php$ {
#        #    proxy_pass   http://127.0.0.1;
#        #}
#
#        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#        #
#        #location ~ \.php$ {
#        #    root           html;
#        #    fastcgi_pass   127.0.0.1:9000;
#        #    fastcgi_index  index.php;
#        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#        #    include        fastcgi_params;
#        #}
#
#        # pass the Dubbo rpc to Dubbo provider server listening on 127.0.0.1:20880
#        #
#        #location /dubbo {
#        #    dubbo_pass_all_headers on;
#        #    dubbo_pass_set args $args;
#        #    dubbo_pass_set uri $uri;
#        #    dubbo_pass_set method $request_method;
#        #
#        #    dubbo_pass org.apache.dubbo.samples.tengine.DemoService 0.0.0 tengineDubbo dubbo_backend;
#        #}
#
#        # deny access to .htaccess files, if Apache's document root
#        # concurs with nginx's one
#        #
#        #location ~ /\.ht {
#        #    deny  all;
#        #}
#    }

    # upstream for Dubbo rpc to Dubbo provider server listening on 127.0.0.1:20880
    #
    #upstream dubbo_backend {
    #    multi 1;
    #    server 127.0.0.1:20880;
    #}

    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
